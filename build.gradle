plugins {
    id 'fabric-loom' version '1.10-SNAPSHOT'
    id "me.modmuss50.mod-publish-plugin" version "0.8.2"
}

base {
    archivesName = project.archives_base_name + "-" + project.minecraft_version
}

version = project.mod_version
group = project.maven_group

repositories {
    maven { url "https://maven.terraformersmc.com/" }
    maven { url "https://maven.willbl.dev/releases" }
    maven { url "https://maven.ladysnake.org/releases" }
    maven { url "https://maven.nucleoid.xyz" }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"

    modImplementation include("xyz.amymialee:mialib:${project.mialib_version}")
    modImplementation include("dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cca_version}")
    modImplementation include("dev.onyxstudios.cardinal-components-api:cardinal-components-scoreboard:${project.cca_version}")
    modImplementation include("xyz.nucleoid:server-translations-api:${project.sta_version}")
}

publishMods {
    file = remapJar.archiveFile
    additionalFiles.files.add(remapSourcesJar.archiveFile.get().getAsFile())
    displayName = "${project.version.toString().split("\\+")[0]} for $minecraft_version"
    changelog = ""
    type = STABLE
    modLoaders.addAll("fabric", "quilt")
    dryRun = !providers.gradleProperty("curseforge_api_key").isPresent() || !providers.gradleProperty("modrinth_api_key").isPresent()
    curseforge {
        accessToken = providers.gradleProperty('curseforge_api_key')
        projectId = curseforge_id
        minecraftVersionRange {
            start = minecraft_version
            end = minecraft_version
        }
        announcementTitle = "Download from CurseForge"
        javaVersions.addAll(JavaVersion.VERSION_21, JavaVersion.VERSION_22)
        clientRequired = false
        serverRequired = true
        projectSlug = curseforge_slug
        requires("fabric-api")
        embeds("cardinal-components-api")
    }
    modrinth {
        accessToken = providers.gradleProperty("modrinth_api_key")
        projectId = modrinth_id
        minecraftVersionRange {
            start = minecraft_version
            end = minecraft_version
            includeSnapshots = true
        }
        announcementTitle = "Download from Modrinth"
        requires("fabric-api")
        embeds("cardinal-components-api")
    }
}

fabricApi {
    configureDataGeneration() {
        modId = "ihnmbimc"
        client = true
    }
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("neoforge.mods.toml") {
        expand "version": project.version
    }
    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release.set(17)
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
    toolchain.languageVersion = JavaLanguageVersion.of(17)
    withSourcesJar()
}

jar {
    from("LICENSE.md") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}